class User:
    users_dict = {}
    def __init__(self, user_id, level, name, boss, articles_str):
        self.id = user_id
        self.level = level
        self.name = name
        self.boss = boss
        self.articles = [int(num) - 2 for num in articles_str.split(',')]
        self.status = None
        self.current_request = None
        self.requests = []
        User.users_dict[user_id] = self

class Request:
    def __init__(self, values=None):
        if values is None:
            values = [None, None, None, None, None, None, None, None, 'üíº–£ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è', None, None, '-', '-', None, '-',
            1, 'üíº–£ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è', None, None, None, None]

        (self.start_date, self.author_name, self.amount, self.article, self.comment, self.payment_type, self.recipient, self.bank_and_phone,
         self.status, self.status_date, self.check, self.planned_date, self.status_comment, self.desired_date, self.payment_bank,

         self.id, self.hidden_status, self.boss, self.author_level, self.author_boss, self.author_id) = values

    def to_list(self):
        return [self.start_date, self.author_name, self.amount, self.article, self.comment, self.payment_type, self.recipient, self.bank_and_phone,
                self.status, self.status_date, self.check, self.planned_date, self.status_comment, self.desired_date, self.payment_bank,

                self.id, self.hidden_status, self.boss, self.author_level, self.author_boss, self.author_id]

    #–û—Å—Ç–∞—Ç–æ–∫: {count[articles.index(self.article)]}
    def to_string(self):
        result = f'–ê–≤—Ç–æ—Ä: #{self.author_name}\n–°—Ç–∞—Ç—å—è: #{self.article}\n–°—É–º–º–∞: {self.amount}\n\
–¢–∏–ø: {self.payment_type}\n–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {self.recipient}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {self.comment}\n–ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞: {self.desired_date}\n\
–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞: {self.planned_date}\n–°—Ç–∞—Ç—É—Å: {self.status}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç–∞—Ç—É—Å–∞: {self.status_comment}\n'

        if self.payment_type == '–ø–µ—Ä–µ–≤–æ–¥': result += f'–†–µ–∫–≤–∏–∑–∏—Ç—ã: {self.bank_and_phone}'
        else: result += f'–°—Ç–∞—Ç—É—Å —Å—á—ë—Ç–∞: {self.check}'
        return result


articles = ["–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –∑–∞–∫—É–ø–∫—É –º–æ–ª–æ–∫–∞ –∏ —Å–ª–∏–≤–æ–∫",
    "–†–∞—Å—Ö–æ–¥—ã –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é",
    "–ò–∑–¥–µ—Ä–∂–∫–∏ –Ω–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ—Ä–æ–∂–µ–Ω–æ–≥–æ",
    "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
    "–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —É–ø–∞–∫–æ–≤–∫—É –º–æ—Ä–æ–∂–µ–Ω–æ–≥–æ",
    "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",]

count = [57483, 32578, 87643, 48712, 65291, 74569]

def cupd(art, cnt):
    global articles
    global  count
    articles = art
    count = cnt
